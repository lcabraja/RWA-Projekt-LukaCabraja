@model AdventureWorksOBPRepo.Proizvod
@using AdventureWorksOBPRepo

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Proizvod</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.IDProizvod, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.IDProizvod, new { htmlAttributes = new { @class = "form-control", @readonly = "1" } })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Kategorija", htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                <select class="form-control" id="Kategorija" name="Kategorija">
                    <option value="0" @(@ViewBag.SelectedKategorija == 0 ? "selected=\"1\"" : string.Empty)>/</option>
                    @foreach (Kategorija item in ViewBag.Kategorije)
                    {
                        <option value="@item.IDKategorija" @(@ViewBag.SelectedKategorija == item.IDKategorija ? "selected=\"1\"" : string.Empty)>@item.Naziv</option>
                    }
                </select>
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Potkategorija", htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                <select class="form-control" id="Potkategorija" name="Potkategorija">
                    <option value="0" @(@ViewBag.SelectedPotkategorija == 0 ? "selected=\"1\"" : string.Empty)>/</option>
                    @foreach (Potkategorija item in ViewBag.Potkategorije)
                    {
                        <option value="@item.IDPotkategorija" @(@ViewBag.SelectedPotkategorija == item.IDPotkategorija ? "selected=\"1\"" : string.Empty)>@item.Naziv</option>
                    }
                </select>
                @Html.ValidationMessageFor(model => model.Potkategorija, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Boja", htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                <select class="form-control" id="Boja" name="Boja">
                    @foreach (Boja boja in ViewBag.Boje)
                    {
                        <option value="@((int)boja)" @(@ViewBag.SelectedBoja == (int)boja ? "selected=\"1\"" : string.Empty)>@boja.ToFullName()</option>
                    }
                </select>
                @Html.ValidationMessageFor(model => model.Boja, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Naziv, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.Naziv, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Naziv, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BrojProizvoda, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.BrojProizvoda, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BrojProizvoda, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MinimalnaKolicinaNaSkladistu, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.MinimalnaKolicinaNaSkladistu, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CijenaBezPDV, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.CijenaBezPDV, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Scripts/Proizvod/Edit.js")
}
